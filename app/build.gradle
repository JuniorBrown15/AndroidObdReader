apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "br.com.dreamteam.androidobdreader"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        animationsDisabled = true
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        checkReleaseBuilds false
    }
}

ext {
    supportLibraryVersion = '26.1.0'
    daggerVersion = "2.12"
    butterKnifeVersion = '8.8.1'
    googleServicesVersion = '11.4.2'
    eventbusVersion = '3.0.0'
    versionsArch = '1.0.0'
    rxJavaVersion = '2.1.4'
    rxAndroidVersion = '2.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:support-v4:${supportLibraryVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation 'com.android.support:multidex:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.mockito:mockito-android:2.8.9'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC4'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.7.0RC4'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.7.0RC4'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0RC4'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

}



task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*$MembersInjector*.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)

    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])

    classDirectories = files([debugTree])

    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec’ , ‘**/*.ec'])
}

task instrumentTest(dependsOn: connectedCheck)